<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE mapper
                PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.UserDao">
    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.itheima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 非主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
    
    <!-- 了解的内容：抽取重复的sql语句 -->
    <sql id="defaultUser">
        select * from  user
    </sql>

    <!-- 配置查询所有 -->
    <select id="findAll" resultMap="userMap">
        <!-- select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday from user -->
        select * from user;
    </select>

    <!-- 根据id查询用户id-->
    <select id="findById" parameterType="INT" resultMap="userMap">
        select * from user where id = #{userId}
    </select>
    
    <!-- 根据名称模糊查询 -->
    <select id="findByName" parameterType="string" resultMap="userMap">
        <!-- select * from user where username like #{name} -->
        select * from user where username like '%${value}%'
    </select>

    <!-- 根据用户名称模糊查询，参数变成一个QueryVo对象了 -->
    <select id="findByVo" resultMap="userMap" parameterType="com.itheima.domain.QueryVo">
        select * from user where username like #{user.userName}
    </select>

    <!-- 根据条件查询 -->
    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!--根据id集合查询用户-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <!-- select * from user -->
        <include refid="defaultUser"></include>
        <where>
            <if test="ids!= null and ids.size()>0">
                <foreach collection="ids" open="id in (" close=")" item="uid" separator=",">
                    #{uid}
                </foreach>
            </if>
        </where>
    </select>

</mapper>